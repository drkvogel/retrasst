# Retrieval Assistant

## Todo

 
 * Source/Current box - standardise name - current probably better?
 * port [Plan|Process]Samples to [Plan|Process]Boxes
 * allow selection of secondary aliquots 
 * thread "save changes" in plan
 * how to save stuff? to which tables? when (ie. per row or on exit/save)?    
 * Chunk list should include a second row for each chunk if there is a secondary aliquot (second part of each chunk?)
 * Allow user to fill gaps in boxes from secondary aliquot after primary aliquot (partly?) completed
 * Empty source boxes (all vials "accepted" or "not found") will normally be discarded
   * Final stage: ask user to confirm that vessel/structure/slot is now empty
      * otherwise box should be referred
   * All source boxes from a reorganisation task should end up empty

## misc

 * use DEBUGSTREAM
 * Usual sort order before chunking: destination box and position
 * Usual sort order for each chunk: vessel position, shelf, structure, slot and current position

## Deferred
 
 * testing would be a lot less painful if the plans loaded quicker
 * speed up queries
   * profile?
   * Plan: 
        * load primary aliquot only?
        * save is quite slow
   * Process:  
 * example cryovial retrieval - no chunks
    * there is a plan in the temp table
    * create a new plan, open - ok - plan possible made before db rebuild
 * Session tables: http://community.actian.com/forum/questions-feedback-suggestions/11359-temporary-table.html
DECLARE GLOBAL TEMPORARY TABLE session.temptable AS select * from myview ON COMMIT PRESERVE ROWS WITH NORECOVERY;
 * save changes thread
 * sort "aliquot aliquot ascending" is sorting by ID, so primary (-31781) comes after secondary (-31782) shouldn't show aliquot anyway
 * up/down arrows to show column sort
 * Only read the currently selected chunk/aliquot from the database when it is selected ?
 * canned searches - save, delete e.g. site name, vessel pos, structure pos, slot, source box pos

## Done

 * still not showing 2ndary aliquot    
 * use 2ndary button - remove
 * factor out storage query - getStorage?
    * cache should be wiped at certain points to avoid errors?
 * rename files: Retrasst[Plan|Process][Samples|Boxes]
 * query is v slow - e.g. 1m30s for aliquot_type_cid != Primary; -- load primary and secondary together
 * load 2ndaries seems to work ok
 * save 2ndaries in plan
 * why is the map of box_id to rj_box_id per chunk?
    within each chunk, all boxes containing the vials in that chunk will have a plan entry (rj_box_cid)
    each cryovial is linked to __a box in a particular chunk__ via rj_box_cid, which tells us which chunk the vial is in.
    thus the map being per chunk rather than global is what defines chunks - ie, definitely keep it that way.
    the problem now is how to keep this behaviour and factor out code in order to save both primary and secondary aliquots.
    by the same logic as above, boxes of secondary aliquots must be given unique-per chunk entries also.
    ok, so the same map can be used for both.
  struct Saver to re-use code for 2ndary ali - seems to be saving both aliquots.
  are they read in properly in process? they are read in (hurrah!) but both are displayed.
   * 2nd ali gets overwritten on accept
      accept()
        sample = currentSample() # = currentChunk()->getCurrentRow()->rowAt(current); return (NULL != sample->secondary) ? sample->secondary:sample;
 * Is there a class/method for looking up aliquot type names from an aliquot ID? there is now. My big query for loading the retrieval plan crashes out on real-world size plans (e.g. 4000 samples rather than 28). Joining on c_object_name as well was too much
 * Donâ€™t allow people to save a plan with chunks of more than 1001 samples for sample retrieval/disposal/reorganisation
 * Only display primary aliquots.  
 * add 1 chunk - must add to last current chunk, not in middle
 * factor out select_stats into Util-
 * click on chunk doesn't work now - stays on current chunk-
 * auto-select last chunk-
 * Show aliquot type(s) but not as a separate column
 * Chunk list should show destination boxes rather than source-
 * Columns (left to right): cryovial barcode, site, vessel position, vessel name, shelf (if necessary), structure name, slot, current box, current position, destination box, destination position
 * sgvialsfixedclick debuglog: show sorter name
 * sortChunk(currentChunk(), ACol, Sorter<SampleRow *>::TOGGLE);
 * curr pos sorting doing something funny, dest pos sorting not doing anything
     because adding 'aliquot' column skewed everything - as there is no combined column definition (ColDef?) class,
     sorter funcs can get out of sync with column names
     does it need an enum at all? if an array of objects was initialized, numcols would be the size of the array
 * storage (site, pos, shelf, vessel, structure, slot) of which box? current or destination? both?
     does it matter for setting up the chunks, or which matters more?
     in the retrieval, will want to find storage of both?
 * fix comboSorter - broken window
  * OnClick: show details
 * process() # not used, remove
 * currentSample() returns the secondary aliquot if present; now that they're all loaded if available, any changes made to the status of the 'currentSample()' are made to the secondary whether selected or not; result: it looks like nothing has happened (to the primary). This is wrong.
 * changes to status not apparent
    * because currentSample() returns secondary if loaded and secondary is now loaded by default, see above
    * return secondary only if primary is NOT_FOUND?
 * save both primary and secondary to database
 * scroll to show at least 5 next samples - ScrollBy doesn't seem to work! but worked out a bodge
 * show storage location
 * show sample ID (barcode)?
 * if identical barcode entered into signoff box
    * mark signed off
    * refresh - different colour for signed off    
    
 when loading chunks, boxes, vials, pay attention to their state (
    // Chunk? Must be calculated? NEW|PART_PROCESSED|COMPLETED
        // NOT_STARTED, INPROGRESS, DONE, REJECTED, DELETED
    // LCDbBoxRetrieval::Status::NEW|PART_FILLED|COLLECTED|NOT_FOUND|DELETED
    // LCDbCryovialRetrieval::Status::EXPECTED|IGNORED|COLLECTED|NOT_FOUND
 ) and colour accordingly

## c++ into python-like pseudocode:
    strip out 
        {}, ;
        .c_str()
        type declarations
        return types (void etc)
    -> into .
    // comments into #
    /* */ into """

### language options

 * python (st2 plugin)
 * javascript (in browser)
 * PHP
 * regex