
    
## Done

 * what happens if you double click in a chunk in the middle of other chunks? prevent it-
 * which way round should the sorters be done? backwards
    white october mail?
test job: Retrieval_2018 : A few THRIVE EDTA_2 cryovials

 * descending sort not working
    * descending sort only works on last chunk?
    * on previous chunks it is sorting the end of the list instead of the start, e.g. last 3 rows instead of 1st 3
     rbegin()+size()-end, start
     rend()-end?, rend() - start?
    
    rows->rend()-end+1, rows->rend()-start // 2 off bottom
    
    stable_sort(rows->rend()-end-1, rows->rend()-start, cols[col].sort_func_asc); // correct
    
 * partial sort of last chunk - solved? rows->rbegin(), rows->rbegin()+end-start+1
    * if only one chunk asc/dsc sort works correctly (sorts all rows)
    * two chunks: one of 3 vials and one of rest:
        * sort of last chunk misses 1st 3 in overall list (correct) but does not include last 3 (incorrect)
        * 1st chunk now cannot be sort dsc by any column
        * only 1st 3 rows of overall list seem to be affected (correct)
        * dsc sort 1st chunk: what happens?
    * sort of last chunk changes contents of 1st chunk! wrong! 
    * it's only the reverse sort that does the 1st 3 rows instead of the last 3....
      ... and reverse sort doesn't work on the other chunks...
      perhaps on other chunks, the iterator positions mean it finishes immediately..
      one thing is certain...: reverse sort is not working properly!      
       
 * Is it calling SGW::sort_dsc? yes    start: 0, end: 2
 * sort arguments correct?
 * rowAt?
 * Chunk::, SGW:: debugLog
 * sgDebug is not using rowAt - should be real contents of vector? -no

either: 
 * find out how to use reverse_iterator properly- 
 * define sort_func_dsc for each column?
 * find some template/trick that will allow me to receive the opposite of sort_func_asc
    std::logical_not<bool>()?
    not2
    negate
 * how does create list do it?
    frmRetrieveMain: SampleEntry.cpp