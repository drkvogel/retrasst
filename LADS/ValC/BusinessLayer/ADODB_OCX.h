// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 39763 $
// File generated on 07/03/2013 15:07:05 from Type Library described below.

// ************************************************************************  //
// Type Lib: C:/Program Files (x86)/Common Files/System/ado/msado60.tlb (1)
// LIBID: {B691E011-1797-432E-907A-4D8C69339129}
// LCID: 0
// Helpfile: C:\windows\HELP\ado270.chm
// HelpString: Microsoft ActiveX Data Objects 6.0 Library
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// Cmdline:
//   "C:\Program Files (x86)\Embarcadero\RAD Studio\9.0\bin\tlibimp.exe" -C "C:/Program Files (x86)/Common Files/System/ado/msado60.tlb"
// ************************************************************************ //
#ifndef   ADODB_OCXH
#define   ADODB_OCXH

#pragma option push -b -a4 -w-inl -w-8118

#include <olectrls.hpp>
#include <oleserver.hpp>
#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <StdVCL.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "ADODB_TLB.h"
namespace Adodb_tlb
{

// *********************************************************************//
// HelpString: Microsoft ActiveX Data Objects 6.0 Library
// Version:    6.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TConnection
// Help String      : 
// Default Interface: _Connection
// Def. Intf. Object: _ConnectionPtr
// Def. Intf. DISP? : No
// Event   Interface: ConnectionEvents
// TypeFlags        : (6) CanCreate Licensed
// *********************************************************************//
typedef void __fastcall (__closure * TConnectionInfoMessage)(System::TObject * Sender, 
                                                             Adodb_tlb::Error* pError/*[in]*/, 
                                                             Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                             Adodb_tlb::_Connection* pConnection/*[in]*/);
typedef void __fastcall (__closure * TConnectionBeginTransComplete)(System::TObject * Sender, 
                                                                    long TransactionLevel/*[in]*/, 
                                                                    Adodb_tlb::Error* pError/*[in]*/, 
                                                                    Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                    Adodb_tlb::_Connection* pConnection/*[in]*/);
typedef void __fastcall (__closure * TConnectionCommitTransComplete)(System::TObject * Sender, 
                                                                     Adodb_tlb::Error* pError/*[in]*/, 
                                                                     Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                     Adodb_tlb::_Connection* pConnection/*[in]*/);
typedef void __fastcall (__closure * TConnectionRollbackTransComplete)(System::TObject * Sender, 
                                                                       Adodb_tlb::Error* pError/*[in]*/, 
                                                                       Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                       Adodb_tlb::_Connection* pConnection/*[in]*/);
typedef void __fastcall (__closure * TConnectionWillExecute)(System::TObject * Sender, 
                                                             BSTR* Source/*[in,out]*/, 
                                                             Adodb_tlb::CursorTypeEnum* CursorType/*[in,out]*/, 
                                                             Adodb_tlb::LockTypeEnum* LockType/*[in,out]*/, 
                                                             long* Options/*[in,out]*/, 
                                                             Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                             Adodb_tlb::_Command* pCommand/*[in]*/, 
                                                             Adodb_tlb::_Recordset* pRecordset/*[in]*/, 
                                                             Adodb_tlb::_Connection* pConnection/*[in]*/);
typedef void __fastcall (__closure * TConnectionExecuteComplete)(System::TObject * Sender, 
                                                                 long RecordsAffected/*[in]*/, 
                                                                 Adodb_tlb::Error* pError/*[in]*/, 
                                                                 Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                 Adodb_tlb::_Command* pCommand/*[in]*/, 
                                                                 Adodb_tlb::_Recordset* pRecordset/*[in]*/, 
                                                                 Adodb_tlb::_Connection* pConnection/*[in]*/);
typedef void __fastcall (__closure * TConnectionWillConnect)(System::TObject * Sender, 
                                                             BSTR* ConnectionString/*[in,out]*/, 
                                                             BSTR* UserID/*[in,out]*/, 
                                                             BSTR* Password/*[in,out]*/, 
                                                             long* Options/*[in,out]*/, 
                                                             Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                             Adodb_tlb::_Connection* pConnection/*[in]*/);
typedef void __fastcall (__closure * TConnectionConnectComplete)(System::TObject * Sender, 
                                                                 Adodb_tlb::Error* pError/*[in]*/, 
                                                                 Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                 Adodb_tlb::_Connection* pConnection/*[in]*/);
typedef void __fastcall (__closure * TConnectionDisconnect)(System::TObject * Sender, 
                                                            Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                            Adodb_tlb::_Connection* pConnection/*[in]*/);

class PACKAGE TConnection : public Vcl::Oleserver::TOleServer
{
  _ConnectionPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TConnection(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  _ConnectionPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ConnectionPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_ConnectionString(void);
  void            __fastcall set_ConnectionString(BSTR pbstr/*[in]*/);
  long            __fastcall get_CommandTimeout(void);
  void            __fastcall set_CommandTimeout(long plTimeout/*[in]*/);
  long            __fastcall get_ConnectionTimeout(void);
  void            __fastcall set_ConnectionTimeout(long plTimeout/*[in]*/);
  BSTR            __fastcall get_Version(void);
  Adodb_tlb::ErrorsPtr __fastcall get_Errors(void);
  BSTR            __fastcall get_DefaultDatabase(void);
  void            __fastcall set_DefaultDatabase(BSTR pbstr/*[in]*/);
  Adodb_tlb::IsolationLevelEnum __fastcall get_IsolationLevel(void);
  void            __fastcall set_IsolationLevel(Adodb_tlb::IsolationLevelEnum Level/*[in]*/);
  long            __fastcall get_Attributes(void);
  void            __fastcall set_Attributes(long plAttr/*[in]*/);
  Adodb_tlb::CursorLocationEnum __fastcall get_CursorLocation(void);
  void            __fastcall set_CursorLocation(Adodb_tlb::CursorLocationEnum plCursorLoc/*[in]*/);
  Adodb_tlb::ConnectModeEnum __fastcall get_Mode(void);
  void            __fastcall set_Mode(Adodb_tlb::ConnectModeEnum plMode/*[in]*/);
  BSTR            __fastcall get_Provider(void);
  void            __fastcall set_Provider(BSTR pbstr/*[in]*/);
  long            __fastcall get_State(void);
  void            __fastcall Close(void);
  Adodb_tlb::_Recordset* __fastcall Execute(BSTR CommandText/*[in]*/, 
                                            VARIANT* RecordsAffected/*[out,opt]*/, 
                                            long Options/*[in,def,opt]*/);
  long            __fastcall BeginTrans(void);
  void            __fastcall CommitTrans(void);
  void            __fastcall RollbackTrans(void);
  void            __fastcall Open(BSTR ConnectionString/*[in,def,opt]*/, BSTR UserID/*[in,def,opt]*/, 
                                  BSTR Password/*[in,def,opt]*/, long Options/*[in,def,opt]*/);
  Adodb_tlb::_Recordset* __fastcall OpenSchema(Adodb_tlb::SchemaEnum Schema/*[in]*/, 
                                               VARIANT Restrictions/*[in,opt]*/= TNoParam(), 
                                               VARIANT SchemaID/*[in,opt]*/= TNoParam());
  void            __fastcall Cancel(void);
  __property BSTR Version={ read=get_Version };
  __property Adodb_tlb::ErrorsPtr Errors={ read=get_Errors };
  __property long State={ read=get_State };
  __property BSTR ConnectionString={ read=get_ConnectionString, write=set_ConnectionString, stored=false };
  __property long CommandTimeout={ read=get_CommandTimeout, write=set_CommandTimeout, stored=false };
  __property long ConnectionTimeout={ read=get_ConnectionTimeout, write=set_ConnectionTimeout, stored=false };
  __property BSTR DefaultDatabase={ read=get_DefaultDatabase, write=set_DefaultDatabase, stored=false };
  __property Adodb_tlb::IsolationLevelEnum IsolationLevel={ read=get_IsolationLevel, write=set_IsolationLevel, stored=false };
  __property long Attributes={ read=get_Attributes, write=set_Attributes, stored=false };
  __property Adodb_tlb::CursorLocationEnum CursorLocation={ read=get_CursorLocation, write=set_CursorLocation, stored=false };
  __property Adodb_tlb::ConnectModeEnum Mode={ read=get_Mode, write=set_Mode, stored=false };
  __property BSTR Provider={ read=get_Provider, write=set_Provider, stored=false };
private:
  TConnectionInfoMessage         FOnInfoMessage;
  TConnectionBeginTransComplete  FOnBeginTransComplete;
  TConnectionCommitTransComplete FOnCommitTransComplete;
  TConnectionRollbackTransComplete FOnRollbackTransComplete;
  TConnectionWillExecute         FOnWillExecute;
  TConnectionExecuteComplete     FOnExecuteComplete;
  TConnectionWillConnect         FOnWillConnect;
  TConnectionConnectComplete     FOnConnectComplete;
  TConnectionDisconnect          FOnDisconnect;
__published:
  __property TConnectionInfoMessage OnInfoMessage={ read=FOnInfoMessage, write=FOnInfoMessage };
  __property TConnectionBeginTransComplete OnBeginTransComplete={ read=FOnBeginTransComplete, write=FOnBeginTransComplete };
  __property TConnectionCommitTransComplete OnCommitTransComplete={ read=FOnCommitTransComplete, write=FOnCommitTransComplete };
  __property TConnectionRollbackTransComplete OnRollbackTransComplete={ read=FOnRollbackTransComplete, write=FOnRollbackTransComplete };
  __property TConnectionWillExecute OnWillExecute={ read=FOnWillExecute, write=FOnWillExecute };
  __property TConnectionExecuteComplete OnExecuteComplete={ read=FOnExecuteComplete, write=FOnExecuteComplete };
  __property TConnectionWillConnect OnWillConnect={ read=FOnWillConnect, write=FOnWillConnect };
  __property TConnectionConnectComplete OnConnectComplete={ read=FOnConnectComplete, write=FOnConnectComplete };
  __property TConnectionDisconnect OnDisconnect={ read=FOnDisconnect, write=FOnDisconnect };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TRecord
// Help String      : 
// Default Interface: _Record
// Def. Intf. Object: _RecordPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (6) CanCreate Licensed
// *********************************************************************//
class PACKAGE TRecord : public Vcl::Oleserver::TOleServer
{
  _RecordPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TRecord(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  _RecordPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_RecordPtr intf);


  VARIANT         __fastcall get_ActiveConnection(void);
  void            __fastcall set_ActiveConnection(BSTR pvar/*[in]*/);
  void            __fastcall _set_ActiveConnection(Adodb_tlb::_Connection* pvar/*[in]*/);
  Adodb_tlb::ObjectStateEnum __fastcall get_State(void);
  VARIANT         __fastcall get_Source(void);
  void            __fastcall set_Source(BSTR pvar/*[in]*/);
  void            __fastcall _set_Source(LPDISPATCH pvar/*[in]*/);
  Adodb_tlb::ConnectModeEnum __fastcall get_Mode(void);
  void            __fastcall set_Mode(Adodb_tlb::ConnectModeEnum pMode/*[in]*/);
  BSTR            __fastcall get_ParentURL(void);
  Adodb_tlb::FieldsPtr __fastcall get_Fields(void);
  Adodb_tlb::RecordTypeEnum __fastcall get_RecordType(void);
  BSTR            __fastcall MoveRecord(BSTR Source/*[in,def,opt]*/, 
                                        BSTR Destination/*[in,def,opt]*/, 
                                        BSTR UserName/*[in,def,opt]*/, BSTR Password/*[in,def,opt]*/, 
                                        Adodb_tlb::MoveRecordOptionsEnum Options/*[in,def,opt]*/, 
                                        VARIANT_BOOL Async/*[in,def,opt]*/);
  BSTR            __fastcall CopyRecord(BSTR Source/*[in,def,opt]*/, 
                                        BSTR Destination/*[in,def,opt]*/, 
                                        BSTR UserName/*[in,def,opt]*/, BSTR Password/*[in,def,opt]*/, 
                                        Adodb_tlb::CopyRecordOptionsEnum Options/*[in,def,opt]*/, 
                                        VARIANT_BOOL Async/*[in,def,opt]*/);
  void            __fastcall DeleteRecord(BSTR Source/*[in,def,opt]*/, 
                                          VARIANT_BOOL Async/*[in,def,opt]*/);
  void            __fastcall Open(VARIANT Source/*[in,opt]*/, VARIANT ActiveConnection/*[in,opt]*/, 
                                  Adodb_tlb::ConnectModeEnum Mode/*[in,def,opt]*/, 
                                  Adodb_tlb::RecordCreateOptionsEnum CreateOptions/*[in,def,opt]*/, 
                                  Adodb_tlb::RecordOpenOptionsEnum Options/*[in,def,opt]*/, 
                                  BSTR UserName/*[in,def,opt]*/, BSTR Password/*[in,def,opt]*/);
  void            __fastcall Close(void);
  Adodb_tlb::_Recordset* __fastcall GetChildren(void);
  void            __fastcall Cancel(void);
  __property Adodb_tlb::ObjectStateEnum State={ read=get_State };
  __property BSTR ParentURL={ read=get_ParentURL };
  __property Adodb_tlb::FieldsPtr Fields={ read=get_Fields };
  __property Adodb_tlb::RecordTypeEnum RecordType={ read=get_RecordType };
  __property Adodb_tlb::ConnectModeEnum Mode={ read=get_Mode, write=set_Mode, stored=false };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TStream
// Help String      : 
// Default Interface: _Stream
// Def. Intf. Object: _StreamPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (6) CanCreate Licensed
// *********************************************************************//
class PACKAGE TStream : public Vcl::Oleserver::TOleServer
{
  _StreamPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TStream(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  _StreamPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_StreamPtr intf);


  Adodb_tlb::ADO_LONGPTR __fastcall get_Size(void);
  VARIANT_BOOL    __fastcall get_EOS(void);
  Adodb_tlb::ADO_LONGPTR __fastcall get_Position(void);
  void            __fastcall set_Position(Adodb_tlb::ADO_LONGPTR pPos/*[in]*/);
  Adodb_tlb::StreamTypeEnum __fastcall get_Type(void);
  void            __fastcall set_Type(Adodb_tlb::StreamTypeEnum ptype/*[in]*/);
  Adodb_tlb::LineSeparatorEnum __fastcall get_LineSeparator(void);
  void            __fastcall set_LineSeparator(Adodb_tlb::LineSeparatorEnum pLS/*[in]*/);
  Adodb_tlb::ObjectStateEnum __fastcall get_State(void);
  Adodb_tlb::ConnectModeEnum __fastcall get_Mode(void);
  void            __fastcall set_Mode(Adodb_tlb::ConnectModeEnum pMode/*[in]*/);
  BSTR            __fastcall get_Charset(void);
  void            __fastcall set_Charset(BSTR pbstrCharset/*[in]*/);
  VARIANT         __fastcall Read(long NumBytes/*[in,def,opt]*/);
  void            __fastcall Open(VARIANT Source/*[in,opt]*/, 
                                  Adodb_tlb::ConnectModeEnum Mode/*[in,def,opt]*/, 
                                  Adodb_tlb::StreamOpenOptionsEnum Options/*[in,def,opt]*/, 
                                  BSTR UserName/*[in,def,opt]*/, BSTR Password/*[in,def,opt]*/);
  void            __fastcall Close(void);
  void            __fastcall SkipLine(void);
  void            __fastcall Write(VARIANT Buffer/*[in]*/);
  void            __fastcall SetEOS(void);
  void            __fastcall CopyTo(Adodb_tlb::_Stream* DestStream/*[in]*/, 
                                    Adodb_tlb::ADO_LONGPTR CharNumber/*[in,def,opt]*/);
  void            __fastcall Flush(void);
  void            __fastcall SaveToFile(BSTR FileName/*[in]*/, 
                                        Adodb_tlb::SaveOptionsEnum Options/*[in,def,opt]*/);
  void            __fastcall LoadFromFile(BSTR FileName/*[in]*/);
  BSTR            __fastcall ReadText(long NumChars/*[in,def,opt]*/);
  void            __fastcall WriteText(BSTR Data/*[in]*/, 
                                       Adodb_tlb::StreamWriteEnum Options/*[in,def,opt]*/);
  void            __fastcall Cancel(void);
  __property Adodb_tlb::ADO_LONGPTR Size={ read=get_Size };
  __property VARIANT_BOOL EOS={ read=get_EOS };
  __property Adodb_tlb::ObjectStateEnum State={ read=get_State };
  __property Adodb_tlb::ADO_LONGPTR Position={ read=get_Position, write=set_Position, stored=false };
  __property Adodb_tlb::StreamTypeEnum Type={ read=get_Type, write=set_Type, stored=false };
  __property Adodb_tlb::LineSeparatorEnum LineSeparator={ read=get_LineSeparator, write=set_LineSeparator, stored=false };
  __property Adodb_tlb::ConnectModeEnum Mode={ read=get_Mode, write=set_Mode, stored=false };
  __property BSTR Charset={ read=get_Charset, write=set_Charset, stored=false };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCommand
// Help String      : 
// Default Interface: _Command
// Def. Intf. Object: _CommandPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (6) CanCreate Licensed
// *********************************************************************//
class PACKAGE TCommand : public Vcl::Oleserver::TOleServer
{
  _CommandPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCommand(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  _CommandPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_CommandPtr intf);


  void            __fastcall _set_CommandStream(LPUNKNOWN pvStream/*[in]*/);
  VARIANT         __fastcall get_CommandStream(void);
  void            __fastcall set_Dialect(BSTR pbstrDialect/*[in]*/);
  BSTR            __fastcall get_Dialect(void);
  void            __fastcall set_NamedParameters(VARIANT_BOOL pfNamedParameters/*[in]*/);
  VARIANT_BOOL    __fastcall get_NamedParameters(void);
  __property BSTR Dialect={ read=get_Dialect, write=set_Dialect, stored=false };
  __property VARIANT_BOOL NamedParameters={ read=get_NamedParameters, write=set_NamedParameters, stored=false };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TRecordset
// Help String      : 
// Default Interface: _Recordset
// Def. Intf. Object: _RecordsetPtr
// Def. Intf. DISP? : No
// Event   Interface: RecordsetEvents
// TypeFlags        : (6) CanCreate Licensed
// *********************************************************************//
typedef void __fastcall (__closure * TRecordsetWillChangeField)(System::TObject * Sender, 
                                                                long cFields/*[in]*/, 
                                                                VARIANT Fields/*[in]*/, 
                                                                Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                Adodb_tlb::_Recordset* pRecordset/*[in]*/);
typedef void __fastcall (__closure * TRecordsetFieldChangeComplete)(System::TObject * Sender, 
                                                                    long cFields/*[in]*/, 
                                                                    VARIANT Fields/*[in]*/, 
                                                                    Adodb_tlb::Error* pError/*[in]*/, 
                                                                    Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                    Adodb_tlb::_Recordset* pRecordset/*[in]*/);
typedef void __fastcall (__closure * TRecordsetWillChangeRecord)(System::TObject * Sender, 
                                                                 Adodb_tlb::EventReasonEnum adReason/*[in]*/, 
                                                                 long cRecords/*[in]*/, 
                                                                 Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                 Adodb_tlb::_Recordset* pRecordset/*[in]*/);
typedef void __fastcall (__closure * TRecordsetRecordChangeComplete)(System::TObject * Sender, 
                                                                     Adodb_tlb::EventReasonEnum adReason/*[in]*/, 
                                                                     long cRecords/*[in]*/, 
                                                                     Adodb_tlb::Error* pError/*[in]*/, 
                                                                     Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                     Adodb_tlb::_Recordset* pRecordset/*[in]*/);
typedef void __fastcall (__closure * TRecordsetWillChangeRecordset)(System::TObject * Sender, 
                                                                    Adodb_tlb::EventReasonEnum adReason/*[in]*/, 
                                                                    Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                    Adodb_tlb::_Recordset* pRecordset/*[in]*/);
typedef void __fastcall (__closure * TRecordsetRecordsetChangeComplete)(System::TObject * Sender, 
                                                                        Adodb_tlb::EventReasonEnum adReason/*[in]*/, 
                                                                        Adodb_tlb::Error* pError/*[in]*/, 
                                                                        Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                                        Adodb_tlb::_Recordset* pRecordset/*[in]*/);
typedef void __fastcall (__closure * TRecordsetWillMove)(System::TObject * Sender, 
                                                         Adodb_tlb::EventReasonEnum adReason/*[in]*/, 
                                                         Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                         Adodb_tlb::_Recordset* pRecordset/*[in]*/);
typedef void __fastcall (__closure * TRecordsetMoveComplete)(System::TObject * Sender, 
                                                             Adodb_tlb::EventReasonEnum adReason/*[in]*/, 
                                                             Adodb_tlb::Error* pError/*[in]*/, 
                                                             Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                             Adodb_tlb::_Recordset* pRecordset/*[in]*/);
typedef void __fastcall (__closure * TRecordsetEndOfRecordset)(System::TObject * Sender, 
                                                               VARIANT_BOOL* fMoreData/*[in,out]*/, 
                                                               Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                               Adodb_tlb::_Recordset* pRecordset/*[in]*/);
typedef void __fastcall (__closure * TRecordsetFetchProgress)(System::TObject * Sender, 
                                                              long Progress/*[in]*/, 
                                                              long MaxProgress/*[in]*/, 
                                                              Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                              Adodb_tlb::_Recordset* pRecordset/*[in]*/);
typedef void __fastcall (__closure * TRecordsetFetchComplete)(System::TObject * Sender, 
                                                              Adodb_tlb::Error* pError/*[in]*/, 
                                                              Adodb_tlb::EventStatusEnum* adStatus/*[in,out]*/, 
                                                              Adodb_tlb::_Recordset* pRecordset/*[in]*/);

class PACKAGE TRecordset : public Vcl::Oleserver::TOleServer
{
  _RecordsetPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TRecordset(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  _RecordsetPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_RecordsetPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  void            __fastcall Save(VARIANT Destination/*[in,opt]*/, 
                                  Adodb_tlb::PersistFormatEnum PersistFormat/*[in,def,opt]*/);
private:
  TRecordsetWillChangeField      FOnWillChangeField;
  TRecordsetFieldChangeComplete  FOnFieldChangeComplete;
  TRecordsetWillChangeRecord     FOnWillChangeRecord;
  TRecordsetRecordChangeComplete FOnRecordChangeComplete;
  TRecordsetWillChangeRecordset  FOnWillChangeRecordset;
  TRecordsetRecordsetChangeComplete FOnRecordsetChangeComplete;
  TRecordsetWillMove             FOnWillMove;
  TRecordsetMoveComplete         FOnMoveComplete;
  TRecordsetEndOfRecordset       FOnEndOfRecordset;
  TRecordsetFetchProgress        FOnFetchProgress;
  TRecordsetFetchComplete        FOnFetchComplete;
__published:
  __property TRecordsetWillChangeField OnWillChangeField={ read=FOnWillChangeField, write=FOnWillChangeField };
  __property TRecordsetFieldChangeComplete OnFieldChangeComplete={ read=FOnFieldChangeComplete, write=FOnFieldChangeComplete };
  __property TRecordsetWillChangeRecord OnWillChangeRecord={ read=FOnWillChangeRecord, write=FOnWillChangeRecord };
  __property TRecordsetRecordChangeComplete OnRecordChangeComplete={ read=FOnRecordChangeComplete, write=FOnRecordChangeComplete };
  __property TRecordsetWillChangeRecordset OnWillChangeRecordset={ read=FOnWillChangeRecordset, write=FOnWillChangeRecordset };
  __property TRecordsetRecordsetChangeComplete OnRecordsetChangeComplete={ read=FOnRecordsetChangeComplete, write=FOnRecordsetChangeComplete };
  __property TRecordsetWillMove OnWillMove={ read=FOnWillMove, write=FOnWillMove };
  __property TRecordsetMoveComplete OnMoveComplete={ read=FOnMoveComplete, write=FOnMoveComplete };
  __property TRecordsetEndOfRecordset OnEndOfRecordset={ read=FOnEndOfRecordset, write=FOnEndOfRecordset };
  __property TRecordsetFetchProgress OnFetchProgress={ read=FOnFetchProgress, write=FOnFetchProgress };
  __property TRecordsetFetchComplete OnFetchComplete={ read=FOnFetchComplete, write=FOnFetchComplete };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TParameter
// Help String      : 
// Default Interface: _Parameter
// Def. Intf. Object: _ParameterPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (6) CanCreate Licensed
// *********************************************************************//
class PACKAGE TParameter : public Vcl::Oleserver::TOleServer
{
  _ParameterPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TParameter(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  _ParameterPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ParameterPtr intf);


  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pbstr/*[in]*/);
  VARIANT         __fastcall get_Value(void);
  void            __fastcall set_Value(VARIANT pvar/*[in]*/);
  Adodb_tlb::DataTypeEnum __fastcall get_Type(void);
  void            __fastcall set_Type(Adodb_tlb::DataTypeEnum psDataType/*[in]*/);
  void            __fastcall set_Direction(Adodb_tlb::ParameterDirectionEnum plParmDirection/*[in]*/);
  Adodb_tlb::ParameterDirectionEnum __fastcall get_Direction(void);
  void            __fastcall set_Precision(unsigned_char pbPrecision/*[in]*/);
  unsigned_char   __fastcall get_Precision(void);
  void            __fastcall set_NumericScale(unsigned_char pbScale/*[in]*/);
  unsigned_char   __fastcall get_NumericScale(void);
  void            __fastcall set_Size(Adodb_tlb::ADO_LONGPTR pl/*[in]*/);
  Adodb_tlb::ADO_LONGPTR __fastcall get_Size(void);
  long            __fastcall get_Attributes(void);
  void            __fastcall set_Attributes(long plParmAttribs/*[in]*/);
  void            __fastcall AppendChunk(VARIANT Val/*[in]*/);
  __property VARIANT Value={ read=get_Value, write=set_Value };
  __property BSTR Name={ read=get_Name, write=set_Name, stored=false };
  __property Adodb_tlb::DataTypeEnum Type={ read=get_Type, write=set_Type, stored=false };
  __property Adodb_tlb::ParameterDirectionEnum Direction={ read=get_Direction, write=set_Direction, stored=false };
  __property unsigned_char Precision={ read=get_Precision, write=set_Precision, stored=false };
  __property unsigned_char NumericScale={ read=get_NumericScale, write=set_NumericScale, stored=false };
  __property Adodb_tlb::ADO_LONGPTR Size={ read=get_Size, write=set_Size, stored=false };
  __property long Attributes={ read=get_Attributes, write=set_Attributes, stored=false };
};

};     // namespace Adodb_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Adodb_tlb;
#endif

#pragma option pop

#endif // ADODB_OCXH
